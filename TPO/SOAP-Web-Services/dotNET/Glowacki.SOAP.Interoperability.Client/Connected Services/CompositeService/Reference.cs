//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Glowacki.SOAP.Interoperability.Client.CompositeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddRequestMessage", Namespace="http://glowacki.eu/composite")]
    [System.SerializableAttribute()]
    public partial class AddRequestMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long constituent1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long constituent2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long constituent1 {
            get {
                return this.constituent1Field;
            }
            set {
                if ((this.constituent1Field.Equals(value) != true)) {
                    this.constituent1Field = value;
                    this.RaisePropertyChanged("constituent1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long constituent2 {
            get {
                return this.constituent2Field;
            }
            set {
                if ((this.constituent2Field.Equals(value) != true)) {
                    this.constituent2Field = value;
                    this.RaisePropertyChanged("constituent2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddResponseMessage", Namespace="http://glowacki.eu/composite")]
    [System.SerializableAttribute()]
    public partial class AddResponseMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long resultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://glowacki.eu/composite", ConfigurationName="CompositeService.IComposite")]
    public interface IComposite {
        
        // CODEGEN: Generating message contract since element name arg0 from namespace  is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://glowacki.eu/composite/IComposite/addRequest", ReplyAction="http://glowacki.eu/composite/IComposite/addResponse")]
        Glowacki.SOAP.Interoperability.Client.CompositeService.addResponse add(Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://glowacki.eu/composite/IComposite/addRequest", ReplyAction="http://glowacki.eu/composite/IComposite/addResponse")]
        System.Threading.Tasks.Task<Glowacki.SOAP.Interoperability.Client.CompositeService.addResponse> addAsync(Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="add", Namespace="http://glowacki.eu/composite", Order=0)]
        public Glowacki.SOAP.Interoperability.Client.CompositeService.addRequestBody Body;
        
        public addRequest() {
        }
        
        public addRequest(Glowacki.SOAP.Interoperability.Client.CompositeService.addRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class addRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Glowacki.SOAP.Interoperability.Client.CompositeService.AddRequestMessage arg0;
        
        public addRequestBody() {
        }
        
        public addRequestBody(Glowacki.SOAP.Interoperability.Client.CompositeService.AddRequestMessage arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addResponse", Namespace="http://glowacki.eu/composite", Order=0)]
        public Glowacki.SOAP.Interoperability.Client.CompositeService.addResponseBody Body;
        
        public addResponse() {
        }
        
        public addResponse(Glowacki.SOAP.Interoperability.Client.CompositeService.addResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class addResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Glowacki.SOAP.Interoperability.Client.CompositeService.AddResponseMessage @return;
        
        public addResponseBody() {
        }
        
        public addResponseBody(Glowacki.SOAP.Interoperability.Client.CompositeService.AddResponseMessage @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompositeChannel : Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompositeClient : System.ServiceModel.ClientBase<Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite>, Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite {
        
        public CompositeClient() {
        }
        
        public CompositeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompositeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompositeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompositeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Glowacki.SOAP.Interoperability.Client.CompositeService.addResponse Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite.add(Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest request) {
            return base.Channel.add(request);
        }
        
        public Glowacki.SOAP.Interoperability.Client.CompositeService.AddResponseMessage add(Glowacki.SOAP.Interoperability.Client.CompositeService.AddRequestMessage arg0) {
            Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest inValue = new Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest();
            inValue.Body = new Glowacki.SOAP.Interoperability.Client.CompositeService.addRequestBody();
            inValue.Body.arg0 = arg0;
            Glowacki.SOAP.Interoperability.Client.CompositeService.addResponse retVal = ((Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite)(this)).add(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Glowacki.SOAP.Interoperability.Client.CompositeService.addResponse> Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite.addAsync(Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest request) {
            return base.Channel.addAsync(request);
        }
        
        public System.Threading.Tasks.Task<Glowacki.SOAP.Interoperability.Client.CompositeService.addResponse> addAsync(Glowacki.SOAP.Interoperability.Client.CompositeService.AddRequestMessage arg0) {
            Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest inValue = new Glowacki.SOAP.Interoperability.Client.CompositeService.addRequest();
            inValue.Body = new Glowacki.SOAP.Interoperability.Client.CompositeService.addRequestBody();
            inValue.Body.arg0 = arg0;
            return ((Glowacki.SOAP.Interoperability.Client.CompositeService.IComposite)(this)).addAsync(inValue);
        }
    }
}
