
package eu.glowacki.jaxws.client.addressing.proxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IAddressing", targetNamespace = "http://glowacki.eu/addressing")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IAddressing {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws AddressingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addressing", targetNamespace = "http://glowacki.eu/addressing", className = "eu.glowacki.jaxws.client.addressing.proxy.Addressing")
    @ResponseWrapper(localName = "addressingResponse", targetNamespace = "http://glowacki.eu/addressing", className = "eu.glowacki.jaxws.client.addressing.proxy.AddressingResponse")
    @Action(input = "http://glowacki.eu/addressing/AddressingRequest", output = "http://glowacki.eu/addressing/AddressingResponse", fault = {
        @FaultAction(className = AddressingException_Exception.class, value = "http://glowacki.eu/addressing/AddressException")
    })
    public String addressing(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws AddressingException_Exception
    ;

}
